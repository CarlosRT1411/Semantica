;Primer constructor
; 25/10/2022 06:02:33 p. m.
#make_COM#
include emu8086.inc
ORG 100h
	area dw ?
	radio dw ?
	pi dw ?
	resultado dw ?
	a dw ?
	d dw ?
	altura dw ?
	x dw ?
	y dw ?
	i dw ?
	j dw ?
MOV AX, 61
PUSH AX
MOV AX, 61
PUSH AX
POP BX
POP AX
CMP AX, BX
JNE if1
MOV AX, 10
PUSH AX
POP AX
MOV x, AX
if1:
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE if2
POP AX
MOV i, AX
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if3
if3:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if4
if4:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if5
if5:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if6
if6:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if7
if7:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if8
if8:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if9
if9:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if10
if10:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if11
if11:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if12
if12:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if13
if13:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if14
if14:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if15
if15:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if16
if16:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if17
if17:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if18
if18:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if19
if19:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if20
if20:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if21
if21:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if22
if22:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if23
if23:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if24
if24:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if25
if25:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if26
if26:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if27
if27:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if28
if28:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if29
if29:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if30
if30:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if31
if31:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if32
if32:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if33
if33:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if34
if34:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if35
if35:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if36
if36:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if37
if37:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if38
if38:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if39
if39:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if40
if40:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if41
if41:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if42
if42:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if43
if43:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if44
if44:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if45
if45:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if46
if46:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if47
if47:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if48
if48:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if49
if49:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if50
if50:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if51
if51:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if52
if52:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if53
if53:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if54
if54:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if55
if55:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if56
if56:
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if57
if57:
MOV AX, 0
PUSH AX
POP BX
POP AX
CMP AX, BX
JLE 
MOV AX, 0
PUSH AX
POP AX
MOV j, AX
POP BX
POP AX
SUB AX, BX
PUSH AX
POP BX
POP AX
CMP AX, BX
JGE 
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if58
if58:
if2:
MOV AX, 1
PUSH AX
MOV AX, 1
PUSH AX
POP BX
POP AX
CMP AX, BX
JE: if59
MOV AX, 2
PUSH AX
MOV AX, 2
PUSH AX
POP BX
POP AX
CMP AX, BX
JNE if60
if60:
if59:
MOV AX, 256
PUSH AX
POP AX
MOV a, AX
POP AX
POP AX
POP AX
MOV y, AX
POP AX
